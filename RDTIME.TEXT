        .include STDMACRO

; daterec = packed record
;     month: 0..12;
;     day  : 0..31;
;     year : 0..100
; end {daterec};
; timerec = packed record
;     hour   : 0..23;
;     minute : 0..59;
;     filler1: 0..31;
;     second : 0..59;
;     filler2: 0..2047
; end {timerec};
; clockrec = record
;     date: daterec;
;     time: timerec
; end {clockrec};

; procedure rdtime(var now:clockrec);
; external;

RETURN  .equ    0
PTIME   .equ    2
WKSPACE .equ    4

STATEREG .equ   0C068

        .proc   RDTIME,1
        pop     RETURN
        pop     PTIME
        
        jsr     RD_TIME_HEX
        
        ; Seconds
        pla
        sta     WKSPACE+4
        lda     #0
        sta     WKSPACE+5
        sta     WKSPACE+2
        
        ; Minutes
        clc
        pla
        ror     A
        ror     WKSPACE+2
        ror     A
        ror     WKSPACE+2
        ror     A
        ror     WKSPACE+2
        sta     WKSPACE+3
        
        ; Hour
        pla
        ora     WKSPACE+2
        sta     WKSPACE+2
        
        ; Year
        pla
$1      cmp     #100.
        bcc     $2
        sbc     #100.
        bcs     $1
$2      sta     WKSPACE+1
        
        ; Day
        pla
        clc
        adc     #1
        asl     A
        asl     A
        asl     A
        rol     A
        rol     WKSPACE+1
        sta     WKSPACE
        
        ; Month
        pla
        clc
        adc     #1
        ora     WKSPACE
        sta     WKSPACE
        
        ; Clear null byte and day of week from stack.
        pla
        pla
        
        ldy     #5
$3      lda     WKSPACE,y
        sta     @PTIME,y
        dey
        bpl     $3

        push RETURN
        rts
        
RD_TIME_HEX
        pop     $1
        
        lda     STATEREG
        sta     $3
        and     #0CF
        sta     STATEREG
        
        php
        sei             ; Disable interupts. Doubt Pascal interrupt
        pla             ; handlers could cope.
        sta     $2
        
        ; The following code blob is position independant 65816 code
        ; that calls ReadTimeHex in the IIgs Miscelaneous Tool Set.
        ; It's assembled externally.

        .byte   018             ; clc
        .byte   0FB             ; xce
        .byte   0C2,030         ; rep #$30
        .byte   0A9,000,000     ; lda #$0000
        .byte   048             ; pha
        .byte   048             ; pha
        .byte   048             ; pha
        .byte   048             ; pha
        .byte   0A2,003,00D     ; ldx #$0D03
        .byte   022,000,000,0E1 ; jsl $e10000
        .byte   038             ; sec
        .byte   0FB             ; xce
        
        ; After the return to the caller, the stack will look like:
        ; | Prev. Content|
        ; | weekday      | 1-7, with 1=Sunday
        ; | 0            |
        ; | month        | 0-11, with 0=January
        ; | day          | 0-30
        ; | curYear      | Current year minus 1900
        ; | hour         | 0-23
        ; | minute       | 0-59
        ; | second       | 0-59
        ; |--------------| <-- SP
        
        lda     $2
        pha
        plp
        
        lda     $3
        sta     STATEREG
        
        push    $1
        rts

$1      .word   0
$2      .byte   0
$3      .byte   0

                ; 21:24:45, 12-Jan-18
; TIMEVAL .word   024c1, 00315, 0002d
        .end
