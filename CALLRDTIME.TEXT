(*
 * Copyright 2020 Craig McGeachie
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the Licnese is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *)
program Call_RDTIME;

type
    daterec = packed record
        month: 0..12;
        day  : 0..31;
        year : 0..100
    end {daterec};
    timerec = packed record
        hour   : 0..23;
        minute : 0..59;
        filler1: 0..31;
        second : 0..59;
        filler2: 0..2047;
    end {timerec};
    clockrec = record
        date: daterec;
        time: timerec
    end {clockrec};

var
    now:clockrec;
    field:string;

function InitClock:boolean;
external;

procedure ReadClock(var now:clockrec);
external;

procedure PadTimeField(value:integer; var result:string);

begin
    result := '??';
    if (value >= 0) and (value <= 99) then begin
        result[1] := chr(ord('0')+value div 10);
        result[2] := chr(ord('0')+value mod 10)
    end;
end;

begin
    if not InitClock then
        begin
            writeln('No clock.')
        end
    else
        begin
            ReadClock(now);
            with now.time do begin
                PadTimeField(hour,field);
                write(field,':');
                PadTimeField(minute,field);
                write(field,':');
                PadTimeField(second,field);
                writeln(field);
            end;
            with now.date do
                writeln(day:2,'/',month:2,'/',year:2)
        end
end.

